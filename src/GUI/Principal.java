/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.Area;
import Classes.Artigo;
import Classes.Autor;
import dataManipulation.saveBin;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pittigliani
 */
public class Principal extends javax.swing.JFrame {

    saveBin sb = new saveBin();
    DefaultTableModel dtmT = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Titulo", "Area", "Ano"}) {
                @Override
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            };
    DefaultTableModel dtmT2 = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Nome do Autor", "Total de artigos"}) {
                @Override
                public boolean isCellEditable(int rowIndex, int mColIndex) {
                    return false;
                }
            };

    /**
     * Creates new form Principal
     */
    public Principal() {

        initComponents();
        jtBusca.setModel(dtmT);
        ButtonGroup bg = new ButtonGroup();
        bg.add(jbAutor);
        bg.add(jbGrupo);
        bg.add(jbArtigo);
        bg.add(jbArea);
        bg.add(jbArea);
        bg.add(jbAutorAno);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbAutor = new javax.swing.JRadioButton();
        jbGrupo = new javax.swing.JRadioButton();
        jbArtigo = new javax.swing.JRadioButton();
        jbArea = new javax.swing.JRadioButton();
        jtCampo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbBusca = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtBusca = new javax.swing.JTable();
        jbAutorAno = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Principal");

        jbAutor.setText("Autor");
        jbAutor.setActionCommand("");
        jbAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAutorActionPerformed(evt);
            }
        });

        jbGrupo.setText("Grupo de Autores");

        jbArtigo.setText("Artigo");

        jbArea.setText("Área");

        jLabel1.setText("Campo:");

        jbBusca.setText("Buscar");
        jbBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaActionPerformed(evt);
            }
        });

        jtBusca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtBusca);

        jbAutorAno.setText("Autor e Ano");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jbAutor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbGrupo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbArtigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbArea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbAutorAno)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbBusca)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jbBusca))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAutor)
                    .addComponent(jbGrupo)
                    .addComponent(jbArtigo)
                    .addComponent(jbArea)
                    .addComponent(jbAutorAno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAutorActionPerformed

    private void jbBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaActionPerformed
        int rowCount = dtmT.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            dtmT.removeRow(i);
        }
        jtBusca.setModel(dtmT);
        if (jtCampo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Insira algo no campo de busca!");
        } else {

            if (jbAutor.isSelected()) {
                ArrayList<Artigo> lista = sb.artigosAutor(jtCampo.getText());
                if (lista == null) {
                    JOptionPane.showMessageDialog(null, "Autor não encontrado.");
                } else {
                    for (int i = 0; i < lista.size(); i++) {
                        dtmT.addRow(new String[]{//titulo,area,ano
                            lista.get(i).getTitulo(),
                            lista.get(i).getArea(),
                            lista.get(i).getAno(),});
                    }

                }
            } else if (jbGrupo.isSelected()) {
                ArrayList<Artigo> lista = sb.artigosNautores(jtCampo.getText());
                if (lista == null) {
                    JOptionPane.showMessageDialog(null, "Artigo não encontrado!");
                } else {
                    for (int i = 0; i < lista.size(); i++) {
                        dtmT.addRow(new String[]{//titulo,area,ano
                            lista.get(i).getTitulo(),
                            lista.get(i).getArea(),
                            lista.get(i).getAno(),});
                    }
                }
            } else if (jbArtigo.isSelected()) {
                ArrayList<Artigo> lista = sb.artigosBusca3(jtCampo.getText());
                if (lista == null) {
                    JOptionPane.showMessageDialog(null, "Artigo não encontrado!");
                } else {
                    for (int i = 0; i < lista.size(); i++) {
                        dtmT.addRow(new String[]{//titulo,area,ano
                            lista.get(i).getTitulo(),
                            lista.get(i).getArea(),
                            lista.get(i).getAno(),});
                    }
                }
            } else if (jbArea.isSelected()) {
                int rowCount2 = dtmT2.getRowCount();
                for (int i = rowCount2 - 1; i >= 0; i--) {
                    dtmT2.removeRow(i);
                }

                jtBusca.setModel(dtmT2);

                try {
                    ArrayList<Autor> lista = sb.busca4(jtCampo.getText());
                    if (lista == null) {
                        JOptionPane.showMessageDialog(null, "Area nao encontrada!");
                    } else {
                        for (int i = 0; i < lista.size(); i++) {
                            dtmT2.addRow(new String[]{//titulo,area,ano
                                lista.get(i).getAutor(),
                                lista.get(i).totalArtigo().toString(),});
                        }
                        lista = null;
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (jbAutorAno.isSelected()) {
                ArrayList<Artigo> lista = sb.artigosBusca5(jtCampo.getText());
                for (int i = 0; i < lista.size(); i++) {
                    dtmT.addRow(new String[]{//titulo,area,ano
                        lista.get(i).getTitulo(),
                        lista.get(i).getArea(),
                        lista.get(i).getAno(),});
                }
            }
        }
    }//GEN-LAST:event_jbBuscaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jbArea;
    private javax.swing.JRadioButton jbArtigo;
    private javax.swing.JRadioButton jbAutor;
    private javax.swing.JRadioButton jbAutorAno;
    private javax.swing.JButton jbBusca;
    private javax.swing.JRadioButton jbGrupo;
    private javax.swing.JTable jtBusca;
    private javax.swing.JTextField jtCampo;
    // End of variables declaration//GEN-END:variables
}
